
extern "C" {
#include "virginian.h"
}

#include "gtest/gtest.h"

namespace {

class AssertionTest : public ::testing::Test {
};

// this is to provide a layer of protection from goofy assertion configs
TEST_F(AssertionTest, BasicAssertions) {
	ASSERT_EQ(VIRG_KB, 1024);
	ASSERT_EQ(VIRG_MB, 1048576);
	ASSERT_EQ(VIRG_GB, 1073741824);
	ASSERT_GT(VIRG_TABLET_SIZE, 0);
	ASSERT_GT(VIRG_TABLET_KEY_INCREMENT, 0);
	ASSERT_GT(VIRG_TABLET_INFO_SIZE, 0);
	ASSERT_GT(VIRG_TABLET_INFO_INCREMENT, 0);

	ASSERT_GT(VIRG_MEM_TABLETS, 0);
	ASSERT_GT(VIRG_GPU_TABLETS, 0);
	ASSERT_GT(VIRG_VM_TABLES, 0);
	ASSERT_GT(VIRG_CPU_SIMD, 0);

	ASSERT_GE(VIRG_CUDADEVICE, 0);
	ASSERT_LT(VIRG_CUDADEVICE, 4);

	ASSERT_GT(VIRG_THREADSPERBLOCK, 0);
	EXPECT_LE(VIRG_THREADSPERBLOCK, 540);
	ASSERT_TRUE(VIRG_ISPWR2(VIRG_THREADSPERBLOCK));
	ASSERT_EQ(-(int)VIRG_THREADSPERBLOCK, (int)VIRG_THREADSPERBLOCK_MASK);
	ASSERT_EQ((int)(VIRG_THREADSPERBLOCK & VIRG_THREADSPERBLOCK_MASK), (int)VIRG_THREADSPERBLOCK);

	ASSERT_GT(VIRG_MULTITHREADS, 0);
	EXPECT_LE(VIRG_MULTITHREADS, 64);
	ASSERT_EQ(VIRG_FAIL, 0);
	ASSERT_EQ(VIRG_SUCCESS, 1);

	ASSERT_EQ(virg_sizes[VIRG_INT], sizeof(int));
	ASSERT_EQ(virg_sizes[VIRG_FLOAT], sizeof(float));
	ASSERT_EQ(virg_sizes[VIRG_INT64], sizeof(long long int));
	ASSERT_EQ(virg_sizes[VIRG_DOUBLE], sizeof(double));
	ASSERT_EQ(virg_sizes[VIRG_CHAR], sizeof(char));
}

}

